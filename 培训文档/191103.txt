~]# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
~]# yum install epel-release -y

~]# yum list docker --show-duplicates

~]# yum install -y yum-utils
~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

~]# yum list docker-ce --show-duplicates

~]# vi /etc/docker/daemon.json
{
  "graph": "/data/docker",
  "storage-driver": "overlay2",
  "insecure-registries": ["registry.access.redhat.com","quay.io"],
  "registry-mirrors": ["https://q2gr04ke.mirror.aliyuncs.com"],
  "bip": "172.7.5.1/24",
  "exec-opts": ["native.cgroupdriver=systemd"],
  "live-restore": true
}
~]# systemctl enable docker
~]# systemctl start docker

~]# docker info

~]# docker run hello-world

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

http://dockerhub.com/  --> http://hub.docker.com

~]# docker login docker.io

~]# docker search alpine

~]# docker pull alpine

~]# docker pull alpine:3.10.1

~]# docker images

~]# docker tag 965ea09ff2eb docker.io/oldboy1103/alpine:v3.10.3

~]# docker tag 965ea09ff2eb oldboy1103/alpine:latest

~]# docker push docker.io/oldboy1103/alpine:latest

~]# docker rmi docker.io/oldboy1103/alpine:latest

~]# docker ps -a

~]# docker run -ti oldboy1103/alpine:latest /bin/sh

~]# docker run --rm oldboy1103/alpine:latest /bin/echo hello

~]# docker exec -ti e0b7fcf28418 /bin/sh

~]# docker start/stop/restart e0b7fcf28418

~]# docker rm -f myalpine1

~]# for i in `docker ps -a|grep -i exit|awk '{print $1}'`;do docker rm -f $i;done

~]# docker commit -p myalpine oldboy1103/alpine:v3.10.3_with_1.txt

~]# docker save 6c2009aef1cc > alpine:v3.10.3_with_1.txt.tar

~]# docker load < alpine\:v3.10.3_with_1.txt.tar

~]# docker tag 6c2009aef1cc oldboy1103/alpine:v3.10.3_with_1.txt

~]# docker run --rm -ti --name myalpine_with_1.txt oldboy1103/alpine:v3.10.3_with_1.txt /bin/sh

~]# docker run hello-world 2>&1 >>/dev/null

~]# docker logs -f 7756b96cc32a

~]# docker pull nginx:1.12.2

~]# docker run --rm --name mynginx -d -p81:80 oldboy1103/nginx:v1.12.2

~]# mkdir html

html]# wget www.baidu.com -O index.html

~]# docker run -d --rm --name nginx_with_baidu -d -p82:80 -v/root/html:/usr/share/nginx/html oldboy1103/nginx:v1.12.2

~]# docker inspect 8c440bed2ccb

~]# docker run --rm -e E_OPTS=abcdefg oldboy1103/alpine:latest printenv

~]# docker exec -ti nginx_with_baidu /bin/bash

tee /etc/apt/sources.list << EOF
deb http://mirrors.163.com/debian/ jessie main non-free contrib
deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib
EOF

/# apt-get update && apt-get install curl -y

~]# docker commit -p 8c440bed2ccb oldboy1103/nginx:curl

~]# docker push oldboy1103/nginx:curl

vi /data/dockerfile/Dockerfile
FROM stanleyws/nginx:v1.12.2
USER nginx
WORKDIR /usr/share/nginx/html

dockerfile]# docker build . -t docker.io/oldboy1103/nginx:v1.12.2_with_user_workdir

dockerfile]# docker run --rm -ti --name nginx123 oldboy1103/nginx:v1.12.2_with_user_workdir /bin/bash
nginx@149ac8f528cc:/usr/share/nginx/html$ whoami
nginx
nginx@149ac8f528cc:/usr/share/nginx/html$ pwd
/usr/share/nginx/html

FROM stanleyws/nginx:v1.12.2
ADD index.html /usr/share/nginx/html/index.html
EXPOSE 80

dockerfile]# docker build . -t oldboy1103/nginx:v1.12.2_with_index_expose

dockerfile]# docker run --rm -d --name nginx123 -P oldboy1103/nginx:v1.12.2_with_index_expose

FROM centos:7
ENV VER 9.11.4
RUN yum install bind-$VER -y

dockerfile]# docker build . -t oldboy1103/bind:v9.11.4_with_env_run

FROM centos:7
RUN yum install httpd -y
CMD ["httpd","-D","FOREGROUND"]

dockerfile]# docker build . -t oldboy1103/httpd:test

FROM centos:7
ADD entrypoint.sh /entrypoint.sh
RUN yum install epel-release -q -y && yum install nginx -y
ENTRYPOINT /entrypoint.sh

#!/bin/bash

/sbin/nginx -g "daemon off;"

dockerfile]# docker run --rm -p84:80 oldboy1103/nginx:mynginx

FROM oldboy1103/nginx:v1.12.2
USER root
ENV WWW /usr/share/nginx/html
ENV CONF /etc/nginx/conf.d
RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&\ 
    echo 'Asia/Shanghai' >/etc/timezone
WORKDIR $WWW
ADD index.html $WWW/index.html
ADD demo.od.com.conf $CONF/demo.od.com.conf
EXPOSE 80
CMD ["nginx","-g","daemon off;"]

dockerfile]# vi demo.od.com.conf

server {
   listen 80;
   server_name demo.od.com;

   root /usr/share/nginx/html;
}

dockerfile]# docker run -ti --rm --name lhwl2 --net=container:d62807b4af37 oldboy1103/nginx:curl /bin/bash